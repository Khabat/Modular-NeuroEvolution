/*
 * EC_GrammaticalEvolution4NNView.java
 */

package thesisapplication;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import java.io.File;
import java.io.FilenameFilter;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;


/**
 * The application's main frame.
 */
public class ThesisView extends FrameView {
 private JFileChooser fc;
 boolean isRegression2=false;
    public ThesisView(SingleFrameApplication app) {
        super(app);

        initComponents();
        isRegression2=false;
        fc=new JFileChooser();
        dataset_path.setText("test\\classification dataset\\1\\penalty\\dataset");
        prop_path.setText("test\\classification dataset\\1\\penalty\\NeuralNetwork-24.properties");
        log_path.setText("test\\classification dataset\\1\\penalty\\log-test.txt");
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = ThesisApplication.getApplication().getMainFrame();
            aboutBox = new ThesisAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        ThesisApplication.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        RunBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        dataset_path = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        prop_path = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        log_path = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        classIndex = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        folds = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        pools = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        neurons = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        validationPercent = new javax.swing.JTextField();
        isTrainTest = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(thesisapplication.ThesisApplication.class).getContext().getResourceMap(ThesisView.class);
        RunBtn.setText(resourceMap.getString("RunBtn.text")); // NOI18N
        RunBtn.setName("RunBtn"); // NOI18N
        RunBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunBtnActionPerformed(evt);
            }
        });

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.GridLayout(3, 2));

        dataset_path.setName("dataset_path"); // NOI18N
        jPanel3.add(dataset_path);

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        prop_path.setName("paop_path"); // NOI18N
        jPanel3.add(prop_path);

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        log_path.setText(resourceMap.getString("log_path.text")); // NOI18N
        log_path.setName("log_path"); // NOI18N
        jPanel3.add(log_path);

        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridLayout(5, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);

        classIndex.setName("classIndex"); // NOI18N
        jPanel1.add(classIndex);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel1.add(jLabel2);

        folds.setName("folds"); // NOI18N
        jPanel1.add(folds);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4);

        pools.setText(resourceMap.getString("pools.text")); // NOI18N
        pools.setName("pools"); // NOI18N
        jPanel1.add(pools);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel1.add(jLabel3);

        neurons.setText(resourceMap.getString("neurons.text")); // NOI18N
        neurons.setName("neurons"); // NOI18N
        jPanel1.add(neurons);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel1.add(jLabel5);

        validationPercent.setText(resourceMap.getString("validationPercent.text")); // NOI18N
        validationPercent.setName("validationPercent"); // NOI18N
        jPanel1.add(validationPercent);

        isTrainTest.setSelected(true);
        isTrainTest.setName("isTrainTest"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, isTrainTest, org.jdesktop.beansbinding.ELProperty.create("${selected}"), isTrainTest, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        isTrainTest.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                isTrainTestStateChanged(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jTextField1.setText(resourceMap.getString("testName.text")); // NOI18N
        jTextField1.setName("testName"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(isTrainTest))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(RunBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isTrainTest)
                            .addComponent(jLabel6)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(RunBtn)
                .addGap(23, 23, 23))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N
        fileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileMenuMouseClicked(evt);
            }
        });
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(thesisapplication.ThesisApplication.class).getContext().getActionMap(ThesisView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        fileMenu.add(jMenuItem1);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void RunBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunBtnActionPerformed
        if (isTrainTest.isSelected()) {
            StringTokenizer st = new StringTokenizer(this.log_path.getText(), ",");
            while ( st.hasMoreTokens()) {
                String token = st.nextToken();
                int problemIndex = Integer.valueOf(token);
                String datasetPath = "test\\GECCO\\" + problemIndex + "\\"+jTextField1.getText()+"\\dataset";
                String directoryPath = "test\\GECCO\\" + problemIndex + "\\"+jTextField1.getText()+"\\";
                File f=new File(directoryPath);
                FilenameFilter filter = new FilenameFilter(){
                    public boolean accept(File directory, String fileName){
                        return fileName.endsWith(".properties");
                    }
                };
                File properties[]=f.listFiles(filter);
                //String logPath    ="test\\classification dataset\\"+problemIndex+"\\penalty\\";
                int[] neurons_in = parseInput(this.neurons.getText());
                int[] pools_in = parseInput(this.pools.getText());
                for (int i = 0; i < properties.length; i++) {
                    String propPath = properties[i].getPath();
                    String logPath = propPath.substring(0,propPath.indexOf(".properties"))+".log";
                    String summaryPath = propPath.substring(0,propPath.lastIndexOf("\\"))+"\\summary.log";
                    Controller_Train_Test control = new Controller_Train_Test(summaryPath, logPath, propPath);
                    control.run(datasetPath,pools_in, neurons_in, 30, 2,
                            100 - Integer.valueOf(this.validationPercent.getText()));
                }
                Controller_Train_Test.logSummary();
                Controller_Train_Test.summaryResults4Log.clear();
            }
//            Controller_Train_Test control = new Controller_Train_Test(log_path.getText(), prop_path.getText());
//            int[] neurons_in = parseInput(this.neurons.getText());
//            int[] pools_in = parseInput(this.pools.getText());
//            control.run(dataset_path.getText(), Integer.valueOf(classIndex.getValue().toString()).intValue(),
//                    pools_in, neurons_in, 5, 2, 100 - Integer.valueOf(this.validationPercent.getText()));
        } else {
            Controller control = new Controller(log_path.getText(), prop_path.getText());
            int[] neurons_in = parseInput(this.neurons.getText());
            int[] pools_in = parseInput(this.pools.getText());
            control.run(dataset_path.getText(), Integer.valueOf(classIndex.getValue().toString()).intValue(),
                    pools_in, neurons_in, 5, 2, 100 - Integer.valueOf(this.validationPercent.getText()));
        }

    }//GEN-LAST:event_RunBtnActionPerformed

    @SuppressWarnings("static-access")
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (isTrainTest.isSelected()) {
            fc.setFileSelectionMode(fc.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new File(dataset_path.getText()));
            int retValue = fc.showOpenDialog(null);
            if (retValue == JFileChooser.APPROVE_OPTION) {
                File f = fc.getSelectedFile();
                dataset_path.setText(f.getPath());
            }
        } else {
            fc.setFileSelectionMode(fc.FILES_ONLY);
            fc.setCurrentDirectory(new File(dataset_path.getText()));
            int retValue = fc.showOpenDialog(null);
            if (retValue == JFileChooser.APPROVE_OPTION) {
                File f = fc.getSelectedFile();
                dataset_path.setText(f.getPath());
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    @SuppressWarnings("static-access")
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        fc.setFileSelectionMode(fc.FILES_ONLY);
        fc.setCurrentDirectory(new File(prop_path.getText()));
        int retValue = fc.showOpenDialog(null);
        if (retValue == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            prop_path.setText(f.getPath());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void isTrainTestStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_isTrainTestStateChanged
        // TODO add your handling code here:
        isRegression2=!isRegression2;
    }//GEN-LAST:event_isTrainTestStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        fc.setFileSelectionMode(fc.FILES_ONLY);
        fc.setCurrentDirectory(new File(log_path.getText()));
        int retValue = fc.showOpenDialog(null);
        if (retValue == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            log_path.setText(f.getPath());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:

        DatasetSegmentation d=new DatasetSegmentation();
        d.setVisible(true);

    }//GEN-LAST:event_fileMenuActionPerformed

    private void fileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuMouseClicked
        // TODO add your handling code here:
        DatasetSegmentation d=new DatasetSegmentation();
        d.setVisible(true);
    }//GEN-LAST:event_fileMenuMouseClicked
   private int[] parseInput(String str) {
       StringTokenizer st=new StringTokenizer(str,",");
       int ret[]=new int[st.countTokens()];
       int counter=0;
       while(st.hasMoreTokens()){
           ret[counter]=Integer.valueOf(st.nextToken()).intValue();
       }
       return ret;
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RunBtn;
    private javax.swing.JSpinner classIndex;
    private javax.swing.JTextField dataset_path;
    private javax.swing.JSpinner folds;
    private javax.swing.JCheckBox isTrainTest;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField log_path;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField neurons;
    private javax.swing.JTextField pools;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField prop_path;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextField validationPercent;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
}
