/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DatasetSegmentation.java
 *
 * Created on Nov 8, 2013, 3:32:46 PM
 */

package thesisapplication;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Arrays;
import java.util.Random;

import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.plaf.FileChooserUI;
import net.sf.javaml.core.Dataset;
import net.sf.javaml.core.DefaultDataset;
import net.sf.javaml.tools.data.ARFFHandler;



/**
 *
 * @author Khabat
 */
public class DatasetSegmentation extends javax.swing.JFrame {

    JFileChooser fc;
    Random r = new Random();
    /** Creates new form DatasetSegmentation */
    public DatasetSegmentation() {
        initComponents();
        fc=new JFileChooser(new File("test\\"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        dataset_Path = new javax.swing.JTextField();
        trainPercent = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        iterations = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        classIndex = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(thesisapplication.ThesisApplication.class).getContext().getResourceMap(DatasetSegmentation.class);
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dataset_Path.setText(resourceMap.getString("dataset_Path.text")); // NOI18N
        dataset_Path.setName("dataset_Path"); // NOI18N

        trainPercent.setText(resourceMap.getString("trainPercent.text")); // NOI18N
        trainPercent.setName("trainPercent"); // NOI18N

        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        iterations.setName("iterations"); // NOI18N

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        classIndex.setName("classIndex"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                    .addGap(12, 12, 12))
                                .addComponent(jLabel2))
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(trainPercent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(iterations, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(classIndex, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(217, 217, 217))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(dataset_Path, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(dataset_Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        fc.setFileSelectionMode(fc.FILES_ONLY);
        fc.setCurrentDirectory(new File(dataset_Path.getText()));
        int retValue = fc.showOpenDialog(null);
        if (retValue == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            dataset_Path.setText(f.getPath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Dataset total=loadDataset(dataset_Path.getText(), Integer.valueOf(classIndex.getValue().toString()));
        int noIteration=Integer.valueOf(iterations.getText());
        int trainP=Integer.valueOf(trainPercent.getText());
        noIteration= (trainP==50)?(noIteration*2):(noIteration);
        for(int i=0;i<noIteration;i++){
            Dataset datasets[]=segmentDataset(total, trainP);
            saveDataset(datasets[0], new File(dataset_Path.getText()).getParent()+"\\train"+(i+1)+".arff");
            saveDataset(datasets[1], new File(dataset_Path.getText()).getParent()+"\\test"+(i+1)+".arff");
            if (trainP == 50) {
                i++;
                saveDataset(datasets[1], new File(dataset_Path.getText()).getParent() + "\\train" + (i + 1) + ".arff");
                saveDataset(datasets[0], new File(dataset_Path.getText()).getParent() + "\\test" + (i + 1) + ".arff");

            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed
    private Dataset[] segmentDataset(Dataset data, int trainPercent){
        
        int numberOfTrains = (int) (trainPercent * data.size() / 100.0);
        int []arrayOfIndices=generateRandomArray(numberOfTrains, data.size());

        DefaultDataset train=new DefaultDataset();
        DefaultDataset test=new DefaultDataset();

        Arrays.sort(arrayOfIndices);
        
        for(int i=0;i<numberOfTrains;i++){
            train.add( data.get( arrayOfIndices[i]) );
        }
        for(int i=0;i<data.size();i++){
            if(Arrays.binarySearch(arrayOfIndices, i)<0){
                test.add(data.get(i));
            }
        }

        Dataset[] ret=new Dataset[2];
        ret[0]=train;
        ret[1]=test;

        return ret;
    }
    /**
     * it generates random array which its elements are not repeated
     * size: size of array while nubers are generated in [0,uperBound]
     */
    private int[] generateRandomArray(int size, int uperBound){
        
        int array[] = new int[size];
        for (int i = 0; i < size; i++) {
            array[i] = -1;
        }
        int temp;
        boolean isThere;

        for (int i = 0; i < size; i++) {
            do {
                isThere=false;
                temp = r.nextInt(uperBound);

                for(int j=0;j<i+1;j++){
                    if(temp==array[j]){
                        isThere=true;
                        break;
                    }
                }
                
            } while (isThere );
            array[i] = temp;
            //Arrays.sort(array);
        }
        return array;
    }
    private Dataset loadDataset(String arffPath, int classIndex) {
        Dataset totalData = null;
        try {
            totalData = ARFFHandler.loadARFF(new File(arffPath), classIndex);
        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        }
        return totalData;
    }

    private void saveDataset(Dataset data, String path) {

        try {
            net.sf.javaml.tools.data.FileHandler.exportDataset(data, new File(path),false);
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatasetSegmentation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner classIndex;
    private javax.swing.JTextField dataset_Path;
    private javax.swing.JTextField iterations;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField trainPercent;
    // End of variables declaration//GEN-END:variables

}
